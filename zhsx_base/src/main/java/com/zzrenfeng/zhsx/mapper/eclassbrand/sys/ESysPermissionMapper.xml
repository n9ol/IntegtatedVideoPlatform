<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzrenfeng.zhsx.mapper.eclassbrand.sys.ESysPermissionMapper">

	<resultMap id="BaseResultMap" type="com.zzrenfeng.zhsx.model.eclassbrand.sys.ESysPermission">
		<result column="id" property="id" />
		<result column="name" property="name" />
		<result column="resourceType" property="resourceType" />
		<result column="url" property="url" />
		<result column="permission" property="permission" />
		<result column="parentId" property="parentId" />
		<result column="parentIds" property="parentIds" />
		<result column="available" property="available" />
	</resultMap>

	<sql id="Base_Column_List">
		id,name,resourceType,url,permission,parentId,parentIds,available
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		where id = #{id}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		ORDER BY available
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		DELETE FROM sys_permission WHERE id = #{id};
	</delete>


	<insert id="insert" parameterType="ESysPermission">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select uuid()</selectKey>
		insert into sys_permission
		(id,name,resourceType,url,permission,parentId,parentIds,available)
		values
		(#{id},#{name},#{resourceType},#{url},#{permission},#{parentId},#{parentIds},#{available})
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="ESysPermission">
		update sys_permission
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="resourceType != null">
				resourceType = #{resourceType},
			</if>
			<if test="url != null">
				url = #{url},
			</if>
			<if test="permission != null">
				permission = #{permission},
			</if>
			<if test="parentId != null">
				parentId = #{parentId},
			</if>
			<if test="parentIds != null">
				parentIds = #{parentIds},
			</if>
			<if test="available != null">
				available = #{available}
			</if>
		</set>
		where id = #{id}
	</update>


	<update id="updateByPrimaryKey" parameterType="ESysPermission">
		update
		sys_permission
		set
		id = #{id},
		name = #{name},
		resourceType = #{resourceType},
		url = #{url},
		permission = #{permission},
		parentId = #{parentId},
		parentIds = #{parentIds},
		available = #{available}
		where id = #{id}
	</update>

	<sql id="Dynamic_Conditions">
		<where>
			1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="name != null">
				and name = #{name}
			</if>
			<if test="resourceType != null">
				and resourceType = #{resourceType}
			</if>
			<if test="url != null">
				and url = #{url}
			</if>
			<if test="permission != null">
				and permission = #{permission}
			</if>
			<if test="parentId != null">
				and parentId = #{parentId}
			</if>
			<if test="parentIds != null">
				and parentIds = #{parentIds}
			</if>
			<if test="available != null">
				and available = #{available}
			</if>
		</where>
	</sql>


	<select id="findSelective" parameterType="ESysPermission" resultType="ESysPermission">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		<include refid="Dynamic_Conditions" />
	</select>


	<select id="findPageSelective" parameterType="ESysPermission" resultType="ESysPermission">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		<include refid="Dynamic_Conditions" />
	</select>

	<select id="getPermissionsByRoldId" parameterType="java.lang.String" resultType="ESysPermission">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		where id in (SELECT permissionId FROM
		sys_role_permission WHERE roleId = #{roldId})
	</select>

	<select id="getPermissionsByUserId" resultType="ESysPermission">
		select
		<include refid="Base_Column_List" />
		from sys_permission
		where id in ( 
			SELECT permissionId FROM sys_role_permission WHERE roleId in (
				select id from sys_role where available = 1 and id in (
					select roleId from sys_user_role where uid = #{userId} 
				)
			) 
		)
		ORDER BY available
	</select>

	<select id="findAllAvailable" parameterType="java.lang.String" resultType="ESysPermission">
		select
		<include refid="Base_Column_List" />,
		(SELECT COUNT(*) FROM sys_role_permission WHERE roleId = #{roleId} AND permissionId = p.id) as isHave
		from sys_permission p
		ORDER BY available
	</select>


</mapper>