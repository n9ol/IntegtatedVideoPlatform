<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzrenfeng.zhsx.mapper.base.BaseTeachingBuildingMapper">

	<resultMap id="BaseResultMap" type="com.zzrenfeng.zhsx.model.base.BaseTeachingBuilding">
		<result column="id" property="id" />
		<result column="build_name" property="buildName" />
		<result column="create_date" property="createDate" />
		<result column="modiy_date" property="modiyDate" />
	</resultMap>

	<sql id="Base_Column_List">
		id,build_name,create_date,modiy_date
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from base_teaching_building
		where id = #{id}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_teaching_building
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from base_teaching_building  where id = #{id}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from base_teaching_building  where id  in (
			<foreach collection="array" item="id" separator=",">
				#{id}
			</foreach>
		)
	</delete>
	

	<insert id="insert" parameterType="BaseTeachingBuilding">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select uuid()</selectKey>
		insert into base_teaching_building (id,build_name,create_date,modiy_date)
		values (#{id},#{buildName},#{createDate},#{modiyDate})
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="BaseTeachingBuilding">
		update base_teaching_building
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="buildName != null">
				build_name = #{buildName},
			</if>
			<if test="createDate != null">
				create_date = #{createDate},
			</if>
			<if test="modiyDate != null">
				modiy_date = #{modiyDate}
			</if>
		</set>
		where id = #{id}
	</update>


	<update id="updateByPrimaryKey" parameterType="BaseTeachingBuilding">
		update base_teaching_building
		set
		id = #{id},
		build_name = #{buildName},
		create_date =
		#{createDate},
		modiy_date = #{modiyDate}
		where id = #{id}
	</update>

	<sql id="Dynamic_Conditions">
		<where>
			1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="buildName != null">
				and build_name = #{buildName}
			</if>
			<if test="createDate != null">
				and create_date = #{createDate}
			</if>
			<if test="modiyDate != null">
				and modiy_date = #{modiyDate}
			</if>
			<if test="search != null">
				and build_name like '%${search}%'
			</if>
		</where>
	</sql>


	<select id="findSelective" parameterType="BaseTeachingBuilding" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_teaching_building
		<include refid="Dynamic_Conditions" />
	</select>


	<select id="findPageSelective" parameterType="BaseTeachingBuilding" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from base_teaching_building
		<include refid="Dynamic_Conditions" />
	</select>



</mapper>