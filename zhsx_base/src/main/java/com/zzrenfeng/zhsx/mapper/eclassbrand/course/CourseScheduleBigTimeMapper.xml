<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzrenfeng.zhsx.mapper.eclassbrand.course.CourseScheduleBigTimeMapper">

	<resultMap id="BaseResultMap" type="com.zzrenfeng.zhsx.model.eclassbrand.course.CourseScheduleBigTime">
		<result column="id" property="id" />
		<result column="big_section_of_day" property="bigSectionOfDay" />
		<result column="odd_section_of_day" property="oddSectionOfDay" />
		<result column="even_section_of_day" property="evenSectionOfDay" />
		<result column="start_time" property="startTime" />
		<result column="end_time" property="endTime" />
		<result column="create_date" property="createDate" />
		<result column="modiy_date" property="modiyDate" />
	</resultMap>

	<sql id="Base_Column_List">
		id,big_section_of_day,odd_section_of_day,even_section_of_day,start_time,end_time,create_date,modiy_date
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from course_schedule_big_time
		where id = #{id}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_schedule_big_time
		ORDER BY big_section_of_day
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from course_schedule_big_time
		where id = #{id}
	</delete>


	<insert id="insert" parameterType="CourseScheduleBigTime">
		<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">select uuid()</selectKey>
		insert into course_schedule_big_time (id,big_section_of_day,odd_section_of_day,even_section_of_day,start_time,end_time,create_date,modiy_date)
		values (#{id},#{bigSectionOfDay},#{oddSectionOfDay},#{evenSectionOfDay},#{startTime},#{endTime},#{createDate},#{modiyDate})
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="CourseScheduleBigTime">
		update course_schedule_big_time
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="bigSectionOfDay != null">
				big_section_of_day = #{bigSectionOfDay},
			</if>
			<if test="oddSectionOfDay != null">
				odd_section_of_day = #{oddSectionOfDay},
			</if>
			<if test="evenSectionOfDay != null">
				even_section_of_day = #{evenSectionOfDay},
			</if>
			<if test="startTime != null">
				start_time = #{startTime},
			</if>
			<if test="endTime != null">
				end_time = #{endTime},
			</if>
			<if test="createDate != null">
				create_date = #{createDate},
			</if>
			<if test="modiyDate != null">
				modiy_date = #{modiyDate}
			</if>
		</set>
		where id = #{id}
	</update>


	<update id="updateByPrimaryKey" parameterType="CourseScheduleBigTime">
		update course_schedule_big_time
		set
		id = #{id},
		big_section_of_day = #{bigSectionOfDay},
		odd_section_of_day = #{oddSectionOfDay},
		even_section_of_day = #{evenSectionOfDay},
		start_time =
		#{startTime},
		end_time = #{endTime},
		create_date =
		#{createDate},
		modiy_date = #{modiyDate}
		where id = #{id}
	</update>

	<sql id="Dynamic_Conditions">
		<where>
			1=1
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="bigSectionOfDay != null">
				and big_section_of_day = #{bigSectionOfDay}
			</if>
			<if test="oddSectionOfDay != null">
				and odd_section_of_day = #{oddSectionOfDay}
			</if>
			<if test="evenSectionOfDay != null">
				and even_section_of_day = #{evenSectionOfDay}
			</if>
			<if test="startTime != null">
				and start_time = #{startTime}
			</if>
			<if test="endTime != null">
				and end_time = #{endTime}
			</if>
			<if test="createDate != null">
				and create_date = #{createDate}
			</if>
			<if test="modiyDate != null">
				and modiy_date = #{modiyDate}
			</if>
		</where>
		ORDER BY big_section_of_day
	</sql>


	<select id="findSelective" parameterType="CourseScheduleBigTime" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_schedule_big_time
		<include refid="Dynamic_Conditions" />
	</select>


	<select id="findPageSelective" parameterType="CourseScheduleBigTime" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from course_schedule_big_time
		<include refid="Dynamic_Conditions" />
	</select>


	<delete id="deleteBybigSectionOfDay" parameterType="java.lang.Integer">
		delete from course_schedule_big_time
		where big_section_of_day = #{bigSectionOfDay}
	</delete>




</mapper>