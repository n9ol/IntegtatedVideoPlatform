<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


	<!-- 加载配置文件 -->
	<bean id="encryptPropertyPlaceholderConfigurer"
		class="com.zzrenfeng.zhsx.config.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
				<value>classpath:commonConfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据库连接池 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="15" />
		<property name="maxWait" value="5000" />
		<property name="timeBetweenEvictionRunsMillis" value="90000" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
		<property name="testOnBorrow" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="select 1" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:SqlMapConfig.xml" />
	</bean>


	<!-- 使用mapper代理模式——MapperScannerConfigurer：mapper的扫描器，将包下边的mapper接口自动创建代理对象， 
		自动创建到spring容器中，bean的id是mapper的类名（首字母小写） 注意：要求mapper.xml和mapper.java同名且在同一个目录 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.zzrenfeng.zhsx.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>


	<!-- 事务 start -->
	<!-- 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- aop -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.zzrenfeng.zhsx.service.impl.*.*(..))" />
	</aop:config>
	<!-- 事务 end -->


	<!-- 开启对@AspectJ注解的支持 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />



	<!-- 文件服务器路径 -->
	<bean id="fileWebPath" class="java.lang.String">
		<constructor-arg name="" value="${file.web}"></constructor-arg>
	</bean>

	<!-- 平台级别标识 -->
	<bean id="platformLevel" class="java.lang.String">
		<constructor-arg name="" value="${platform.level}"></constructor-arg>
	</bean>
	<!-- 平台级别对应地区 id -->
	<bean id="platformLevelId" class="java.lang.String">
		<constructor-arg name="" value="${platform.level.id}"></constructor-arg>
	</bean>


</beans>